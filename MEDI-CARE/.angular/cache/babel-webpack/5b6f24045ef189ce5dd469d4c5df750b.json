{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CookieService = /*#__PURE__*/(() => {\n  class CookieService {\n    constructor() {}\n    /**\n     * Returns the cookie value by name\n     * @param name cookie name\n     */\n\n\n    getCookie(name) {\n      if (!name) {\n        return null;\n      }\n\n      const nameEQ = name + '=';\n      const ca = document.cookie.split(';'); // tslint:disable-next-line: prefer-for-of\n\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1, c.length);\n        }\n\n        if (c.indexOf(nameEQ) === 0) {\n          return c.substring(nameEQ.length, c.length);\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Deletes the cookie with given name\n     * @param name cookie name\n     * @param path path of the domain\n     */\n\n\n    deleteCookie(name) {\n      this.setCookie(name, '', -1);\n    }\n    /**\n     * Creates/sets the cookie\n     * @param name name of cookie\n     * @param value cookie value\n     * @param days validity in days\n     */\n\n\n    setCookie(name, value, days) {\n      let expires = '';\n\n      if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n        expires = '; expires=' + date.toUTCString();\n      }\n\n      document.cookie = name + '=' + value + expires + '; path=/';\n    }\n\n  }\n\n  CookieService.ɵfac = function CookieService_Factory(t) {\n    return new (t || CookieService)();\n  };\n\n  CookieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CookieService,\n    factory: CookieService.ɵfac,\n    providedIn: 'root'\n  });\n  return CookieService;\n})();","map":null,"metadata":{},"sourceType":"module"}